<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nebulae.system.mapper.SysLogMapper">
  <resultMap id="BaseResultMap" type="com.nebulae.system.entity.SysLog">
     <id column="SID" property="sid" jdbcType="VARCHAR" />
    <result column="USER_ID" property="userId" jdbcType="VARCHAR" />
    <result column="USER_NAME" property="userName" jdbcType="VARCHAR" />
    <result column="OPERATION" property="operation" jdbcType="VARCHAR" />
    <result column="OPERATIONDATE" property="operationdate" jdbcType="TIMESTAMP" />
    <result column="METHOD" property="method" jdbcType="VARCHAR" />
    <result column="PARAMS" property="params" jdbcType="VARCHAR" />
    <result column="IP" property="ip" jdbcType="VARCHAR" />
    <result column="NAME" property="name" jdbcType="VARCHAR" />
    <result column="RESPONSE" property="response" jdbcType="DECIMAL" />
  </resultMap>
  
  
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    SID, USER_ID, NAME,USER_NAME, OPERATION, OPERATIONDATE, METHOD, PARAMS, IP, RESPONSE
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.nebulae.utils.ExampleUtils" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from SYS_LOG
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from SYS_LOG
    where SID = #{sid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from SYS_LOG
    where SID = #{sid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.nebulae.utils.ExampleUtils" >
    delete from SYS_LOG
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
   <delete id="batchDelete">
		delete from SYS_LOG where SID in
		<foreach item="id" collection="array" open="(" separator=","
			close=")">
			#{id}
		</foreach>
	</delete>
  <insert id="insert" parameterType="com.nebulae.system.entity.SysLog" >
    insert into SYS_LOG (SID, NAME,USER_ID, USER_NAME, 
      OPERATION, OPERATIONDATE, METHOD, 
      PARAMS, IP, RESPONSE
      )
    values (#{sid,jdbcType=VARCHAR},#{name,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, 
      #{operation,jdbcType=VARCHAR}, #{operationdate,jdbcType=TIMESTAMP}, #{method,jdbcType=VARCHAR}, 
      #{params,jdbcType=VARCHAR}, #{ip,jdbcType=VARCHAR}, #{response,jdbcType=DECIMAL}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.nebulae.system.entity.SysLog" >
    insert into SYS_LOG
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="sid != null" >
        SID,
      </if>
      <if test="name != null" >
        NAME,
      </if>
      <if test="userId != null" >
        USER_ID,
      </if>
      <if test="userName != null" >
        USER_NAME,
      </if>
      <if test="operation != null" >
        OPERATION,
      </if>
      <if test="operationdate != null" >
        OPERATIONDATE,
      </if>
      <if test="method != null" >
        METHOD,
      </if>
      <if test="params != null" >
        PARAMS,
      </if>
      <if test="ip != null" >
        IP,
      </if>
      <if test="response != null" >
        RESPONSE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="sid != null" >
        #{sid,jdbcType=VARCHAR},
      </if>
       <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="operation != null" >
        #{operation,jdbcType=VARCHAR},
      </if>
      <if test="operationdate != null" >
        #{operationdate,jdbcType=TIMESTAMP},
      </if>
      <if test="method != null" >
        #{method,jdbcType=VARCHAR},
      </if>
      <if test="params != null" >
        #{params,jdbcType=VARCHAR},
      </if>
      <if test="ip != null" >
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="response != null" >
        #{response,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.nebulae.utils.ExampleUtils" resultType="java.lang.Integer" >
    select count(*) from SYS_LOG
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update SYS_LOG
    <set >
      <if test="record.sid != null" >
        SID = #{record.sid,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        NAME = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null" >
        USER_ID = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.userName != null" >
        USER_NAME = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.operation != null" >
        OPERATION = #{record.operation,jdbcType=VARCHAR},
      </if>
      <if test="record.operationdate != null" >
        OPERATIONDATE = #{record.operationdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.method != null" >
        METHOD = #{record.method,jdbcType=VARCHAR},
      </if>
      <if test="record.params != null" >
        PARAMS = #{record.params,jdbcType=VARCHAR},
      </if>
      <if test="record.ip != null" >
        IP = #{record.ip,jdbcType=VARCHAR},
      </if>
      <if test="record.response != null" >
        RESPONSE = #{record.response,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update SYS_LOG
    set SID = #{record.sid,jdbcType=VARCHAR},
    NAME = #{record.name,jdbcType=VARCHAR},
      USER_ID = #{record.userId,jdbcType=VARCHAR},
      USER_NAME = #{record.userName,jdbcType=VARCHAR},
      OPERATION = #{record.operation,jdbcType=VARCHAR},
      OPERATIONDATE = #{record.operationdate,jdbcType=TIMESTAMP},
      METHOD = #{record.method,jdbcType=VARCHAR},
      PARAMS = #{record.params,jdbcType=VARCHAR},
      IP = #{record.ip,jdbcType=VARCHAR},
      RESPONSE = #{record.response,jdbcType=DECIMAL}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.nebulae.system.entity.SysLog" >
    update SYS_LOG
    <set >
      <if test="userId != null" >
        USER_ID = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        NAME = #{name,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        USER_NAME = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="operation != null" >
        OPERATION = #{operation,jdbcType=VARCHAR},
      </if>
      <if test="operationdate != null" >
        OPERATIONDATE = #{operationdate,jdbcType=TIMESTAMP},
      </if>
      <if test="method != null" >
        METHOD = #{method,jdbcType=VARCHAR},
      </if>
      <if test="params != null" >
        PARAMS = #{params,jdbcType=VARCHAR},
      </if>
      <if test="ip != null" >
        IP = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="response != null" >
        RESPONSE = #{response,jdbcType=DECIMAL},
      </if>
    </set>
    where SID = #{sid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nebulae.system.entity.SysLog" >
    update SYS_LOG
    set USER_ID = #{userId,jdbcType=VARCHAR},
    NAME = #{name,jdbcType=VARCHAR},
      USER_NAME = #{userName,jdbcType=VARCHAR},
      OPERATION = #{operation,jdbcType=VARCHAR},
      OPERATIONDATE = #{operationdate,jdbcType=TIMESTAMP},
      METHOD = #{method,jdbcType=VARCHAR},
      PARAMS = #{params,jdbcType=VARCHAR},
      IP = #{ip,jdbcType=VARCHAR},
      RESPONSE = #{response,jdbcType=DECIMAL}
    where SID = #{sid,jdbcType=VARCHAR}
  </update>
  
 
</mapper>